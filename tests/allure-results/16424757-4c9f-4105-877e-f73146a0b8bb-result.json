{"name": "test_login_password_short", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'el' referenced before assignment", "trace": "self = <pages.login_page.LoginPage object at 0x1035b1ab0>, locator = ('xpath', \"//*[@text = 'AAAIhr Passwort muss mindestens 8 Zeichen lang sein.']\"), timeout = 10\n\n    def is_element_enabled(self, locator, timeout=10):\n        \"\"\"\n                Purpose:\n                    find element based on locator and see if the element is enabled.\n                Args:\n                    locator (e.g. AndroidLocators.DEFAULT_ANDROID_POPOVER_OK_BUTTON)\n                    (optional) timeout (int): How much time to wait before exception; default is 3 seconds\n                Returns:\n                    bool\n                \"\"\"\n        try:\n>           el = WebDriverWait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n\npages/base_pages.py:144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ed6eabb7-4b8f-4a60-940a-0040c8dbd4ee\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x103591000>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (/Applications/Appium Server GUI.app/Contents/Resources/app/node_modules/appium/node_modules/appium-android-driver/lib/commands/find.js:75:11)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:97:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Applications/Appium Server GUI.app/Contents/Resources/app/node_modules/appium/node_modules/appium-base-driver/lib/basedriver/commands/find.js:33:12)\nE           at AndroidUiautomator2Driver.findElement (/Applications/Appium Server GUI.app/Contents/Resources/app/node_modules/appium/node_modules/appium-base-driver/lib/basedriver/commands/find.js:53:10)\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_login.TestLogin object at 0x1034a7370>, driver = <appium.webdriver.webdriver.WebDriver (session=\"ed6eabb7-4b8f-4a60-940a-0040c8dbd4ee\")>\n\n    @pytestrail.case('C852')\n    @pytest.mark.login_negative\n    def test_login_password_short(self, driver):\n        # Initialization\n        self.init(driver)\n    \n        # The User click on Login button\n        self.register_page.click_login_button()\n    \n        # The User enter username\n        self.login_page.enter_username(self.login)\n    \n        # The User enter invalid password\n        self.login_page.enter_password(self.config_importer.config_user_password_short())\n    \n        # The User click on Login button\n        self.login_page.click_login_button()\n    \n        # The User see 'username or password is invalid' error message\n>       assert self.login_page.error_message_is_visible(self.error['short_password'])\n\ntests/test_login.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:28: in error_message_is_visible\n    self.is_element_enabled((By.XPATH, LoginPageLocators.ERROR_MESSAGE.format(name=error_message)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.login_page.LoginPage object at 0x1035b1ab0>, locator = ('xpath', \"//*[@text = 'AAAIhr Passwort muss mindestens 8 Zeichen lang sein.']\"), timeout = 10\n\n    def is_element_enabled(self, locator, timeout=10):\n        \"\"\"\n                Purpose:\n                    find element based on locator and see if the element is enabled.\n                Args:\n                    locator (e.g. AndroidLocators.DEFAULT_ANDROID_POPOVER_OK_BUTTON)\n                    (optional) timeout (int): How much time to wait before exception; default is 3 seconds\n                Returns:\n                    bool\n                \"\"\"\n        try:\n            el = WebDriverWait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n        except TimeoutException:\n>           assert el is not None, 'element->{0} can\\'t be found for verifying'.format(str(locator))\nE           UnboundLocalError: local variable 'el' referenced before assignment\n\npages/base_pages.py:146: UnboundLocalError"}, "steps": [{"name": "And user click login button", "status": "passed", "steps": [{"name": "find_element_and_click", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//*[contains(@resource-id,'tv_login')]\")"}, {"name": "timeout", "value": "25"}, {"name": "return_bool", "value": "False"}], "start": 1693405514597, "stop": 1693405514728}], "start": 1693405514597, "stop": 1693405514728}, {"name": "And user enter correct email", "status": "passed", "steps": [{"name": "find_all_elements", "status": "passed", "parameters": [{"name": "locator", "value": "('class name', 'android.widget.EditText')"}, {"name": "timeout", "value": "5"}], "start": 1693405514728, "stop": 1693405515528}], "parameters": [{"name": "text", "value": "'lsqateam@gmail.com'"}], "start": 1693405514728, "stop": 1693405516148}, {"name": "And user enter correct password", "status": "passed", "steps": [{"name": "find_all_elements", "status": "passed", "parameters": [{"name": "locator", "value": "('class name', 'android.widget.EditText')"}, {"name": "timeout", "value": "5"}], "start": 1693405516149, "stop": 1693405516755}], "parameters": [{"name": "text", "value": "'Abc123'"}], "start": 1693405516148, "stop": 1693405517363}, {"name": "And user click login button", "status": "passed", "steps": [{"name": "find_all_elements", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//*[contains(@resource-id,'tv_forgot_password')]/following-sibling::*[position()=1]\")"}, {"name": "timeout", "value": "5"}], "start": 1693405517363, "stop": 1693405518065}], "start": 1693405517363, "stop": 1693405518918}, {"name": "And user see input empty error message", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'el' referenced before assignment\n", "trace": "  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/yaroslav.petryk/Desktop/projects/testrail_android/pages/login_page.py\", line 28, in error_message_is_visible\n    self.is_element_enabled((By.XPATH, LoginPageLocators.ERROR_MESSAGE.format(name=error_message)))\n  File \"/Users/yaroslav.petryk/Desktop/projects/testrail_android/pages/base_pages.py\", line 146, in is_element_enabled\n    assert el is not None, 'element->{0} can\\'t be found for verifying'.format(str(locator))\n"}, "parameters": [{"name": "error_message", "value": "'AAAIhr Passwort muss mindestens 8 Zeichen lang sein.'"}], "start": 1693405518919, "stop": 1693405529463}], "start": 1693405512235, "stop": 1693405529471, "uuid": "542a07fc-b420-4306-b272-9b359fba5078", "historyId": "ba8c5949b989636ae0f40d42a520a51b", "testCaseId": "72d40bc840b9beead544936f6b45e4a9", "fullName": "tests.test_login.TestLogin#test_login_password_short", "labels": [{"name": "tag", "value": "login_negative"}, {"name": "tag", "value": "testrail(ids=('C852',))"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "ypetryk-MacBook-Pro.local"}, {"name": "thread", "value": "8567-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}